{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "mglearndatafactory"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"AzureSqlDatabase1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase1'"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Cricsheet Stage')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Cricsheet Stage",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "cricsheet_to_staging",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"cricsheet": {},
									"sinksdates": {},
									"sinksteams": {},
									"sinkmatches": {},
									"sinksreferees": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/cricsheet_to_staging')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/cricsheet to SQL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "cricsheet to SQL",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "filename",
										"value": "$$FILEPATH"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*.json",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "delete from matches",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['info']['event']['match_number']"
										},
										"sink": {
											"name": "match_number",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['info']['event']['name']"
										},
										"sink": {
											"name": "event_name",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['info']['venue']"
										},
										"sink": {
											"name": "venue",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['info']['outcome']['winner']"
										},
										"sink": {
											"name": "winner",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['info']['toss']['winner']"
										},
										"sink": {
											"name": "toss_winner",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['info']['toss']['decision']"
										},
										"sink": {
											"name": "toss_decision",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['info']['dates'][0]"
										},
										"sink": {
											"name": "match_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['info']['player_of_match']"
										},
										"sink": {
											"name": "player_of_match",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['info']['player_of_match']",
								"mapComplexValuesToString": true
							}
						},
						"inputs": [
							{
								"referenceName": "cricsheetJSON",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "s_matches",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/cricsheetJSON')]",
				"[concat(variables('factoryId'), '/datasets/s_matches')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "wip"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "filename",
						"type": "varchar"
					},
					{
						"name": "match_date",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "s_dates"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Filelist')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/cricsheetJSON')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "cricsheetinput"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"meta": {
							"type": "object",
							"properties": {
								"data_version": {
									"type": "string"
								},
								"created": {
									"type": "string"
								},
								"revision": {
									"type": "integer"
								}
							}
						},
						"info": {
							"type": "object",
							"properties": {
								"balls_per_over": {
									"type": "integer"
								},
								"city": {
									"type": "string"
								},
								"dates": {
									"type": "array",
									"items": {
										"type": "string"
									}
								},
								"event": {
									"type": "object",
									"properties": {
										"name": {
											"type": "string"
										},
										"match_number": {
											"type": "integer"
										},
										"group": {
											"type": "string"
										}
									}
								},
								"gender": {
									"type": "string"
								},
								"match_type": {
									"type": "string"
								},
								"match_type_number": {
									"type": "integer"
								},
								"officials": {
									"type": "object",
									"properties": {
										"match_referees": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"reserve_umpires": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"tv_umpires": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"umpires": {
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"outcome": {
									"type": "object",
									"properties": {
										"winner": {
											"type": "string"
										},
										"by": {
											"type": "object",
											"properties": {
												"wickets": {
													"type": "integer"
												}
											}
										}
									}
								},
								"overs": {
									"type": "integer"
								},
								"player_of_match": {
									"type": "array",
									"items": {
										"type": "string"
									}
								},
								"players": {
									"type": "object",
									"properties": {
										"South Africa": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"Australia": {
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"registry": {
									"type": "object",
									"properties": {
										"people": {
											"type": "object",
											"properties": {
												"A Nortje": {
													"type": "string"
												},
												"A Zampa": {
													"type": "string"
												},
												"AJ Finch": {
													"type": "string"
												},
												"AK Markram": {
													"type": "string"
												},
												"Ahsan Raza": {
													"type": "string"
												},
												"D Pretorius": {
													"type": "string"
												},
												"DA Miller": {
													"type": "string"
												},
												"DA Warner": {
													"type": "string"
												},
												"GJ Maxwell": {
													"type": "string"
												},
												"H Klaasen": {
													"type": "string"
												},
												"HE van der Dussen": {
													"type": "string"
												},
												"J Srinath": {
													"type": "string"
												},
												"JR Hazlewood": {
													"type": "string"
												},
												"K Rabada": {
													"type": "string"
												},
												"KA Maharaj": {
													"type": "string"
												},
												"L Rusere": {
													"type": "string"
												},
												"MA Gough": {
													"type": "string"
												},
												"MA Starc": {
													"type": "string"
												},
												"MP Stoinis": {
													"type": "string"
												},
												"MR Marsh": {
													"type": "string"
												},
												"MS Wade": {
													"type": "string"
												},
												"Nitin Menon": {
													"type": "string"
												},
												"PJ Cummins": {
													"type": "string"
												},
												"Q de Kock": {
													"type": "string"
												},
												"SPD Smith": {
													"type": "string"
												},
												"T Bavuma": {
													"type": "string"
												},
												"T Shamsi": {
													"type": "string"
												}
											}
										}
									}
								},
								"season": {
									"type": "string"
								},
								"team_type": {
									"type": "string"
								},
								"teams": {
									"type": "array",
									"items": {
										"type": "string"
									}
								},
								"toss": {
									"type": "object",
									"properties": {
										"decision": {
											"type": "string"
										},
										"winner": {
											"type": "string"
										}
									}
								},
								"venue": {
									"type": "string"
								}
							}
						},
						"innings": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"team": {
										"type": "string"
									},
									"overs": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"over": {
													"type": "integer"
												},
												"deliveries": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"batter": {
																"type": "string"
															},
															"bowler": {
																"type": "string"
															},
															"non_striker": {
																"type": "string"
															},
															"runs": {
																"type": "object",
																"properties": {
																	"batter": {
																		"type": "integer"
																	},
																	"extras": {
																		"type": "integer"
																	},
																	"total": {
																		"type": "integer"
																	}
																}
															}
														}
													}
												}
											}
										}
									},
									"powerplays": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"from": {
													"type": "number"
												},
												"to": {
													"type": "number"
												},
												"type": {
													"type": "string"
												}
											}
										}
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/innings')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "event_name",
						"type": "varchar"
					},
					{
						"name": "match_number",
						"type": "int",
						"precision": 10
					},
					{
						"name": "filename",
						"type": "varchar"
					},
					{
						"name": "innings",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "innings"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/s_dates')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "filename",
						"type": "varchar"
					},
					{
						"name": "match_date",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "s_dates"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/s_file')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "filename",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "s_file"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/s_matches')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "venue",
						"type": "varchar"
					},
					{
						"name": "event_name",
						"type": "varchar"
					},
					{
						"name": "match_number",
						"type": "int",
						"precision": 10
					},
					{
						"name": "match_date",
						"type": "date"
					},
					{
						"name": "winner",
						"type": "varchar"
					},
					{
						"name": "toss_winner",
						"type": "varchar"
					},
					{
						"name": "toss_decision",
						"type": "varchar"
					},
					{
						"name": "player_of_match",
						"type": "varchar"
					},
					{
						"name": "filename",
						"type": "varchar"
					},
					{
						"name": "stage",
						"type": "varchar"
					},
					{
						"name": "match_group",
						"type": "varchar"
					},
					{
						"name": "winning_margin",
						"type": "varchar"
					},
					{
						"name": "eliminator",
						"type": "varchar"
					},
					{
						"name": "method",
						"type": "varchar"
					},
					{
						"name": "result",
						"type": "varchar"
					},
					{
						"name": "season",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "s_matches"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/s_teams')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "filename",
						"type": "varchar"
					},
					{
						"name": "team",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "s_teams"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MySelfHostedIR')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime1')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 10,
							"cleanup": false
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/cricsheet_to_staging')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "cricsheetJSON",
								"type": "DatasetReference"
							},
							"name": "cricsheet"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "s_dates",
								"type": "DatasetReference"
							},
							"name": "sinksdates"
						},
						{
							"dataset": {
								"referenceName": "s_teams",
								"type": "DatasetReference"
							},
							"name": "sinksteams"
						},
						{
							"dataset": {
								"referenceName": "s_matches",
								"type": "DatasetReference"
							},
							"name": "sinkmatches"
						},
						{
							"dataset": {
								"referenceName": "s_referees",
								"type": "DatasetReference"
							},
							"name": "sinksreferees"
						},
						{
							"dataset": {
								"referenceName": "s_generic",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "flattendates"
						},
						{
							"name": "flattenteams"
						},
						{
							"name": "flattenreferees"
						},
						{
							"name": "Flatten1"
						}
					],
					"script": "source(output(\n\t\tmeta as (data_version as string, created as string, revision as integer),\n\t\tinfo as (balls_per_over as integer, city as string, dates as string[], event as (name as string, match_number as integer, group as string), gender as string, match_type as string, match_type_number as integer, officials as (match_referees as string[], reserve_umpires as string[], tv_umpires as string[], umpires as string[]), outcome as (winner as string, by as (wickets as integer)), overs as integer, player_of_match as string[], players as ({South Africa} as string[], Australia as string[]), registry as (people as ({A Nortje} as string, {A Zampa} as string, {AJ Finch} as string, {AK Markram} as string, {Ahsan Raza} as string, {D Pretorius} as string, {DA Miller} as string, {DA Warner} as string, {GJ Maxwell} as string, {H Klaasen} as string, {HE van der Dussen} as string, {J Srinath} as string, {JR Hazlewood} as string, {K Rabada} as string, {KA Maharaj} as string, {L Rusere} as string, {MA Gough} as string, {MA Starc} as string, {MP Stoinis} as string, {MR Marsh} as string, {MS Wade} as string, {Nitin Menon} as string, {PJ Cummins} as string, {Q de Kock} as string, {SPD Smith} as string, {T Bavuma} as string, {T Shamsi} as string)), season as string, team_type as string, teams as string[], toss as (decision as string, winner as string), venue as string),\n\t\tinnings as (team as string, overs as (over as integer, deliveries as (batter as string, bowler as string, non_striker as string, runs as (batter as integer, extras as integer, total as integer))[])[], powerplays as (from as double, to as double, type as string)[])[]\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\trowUrlColumn: 'filename',\n\tdocumentForm: 'arrayOfDocuments',\n\tpartitionBy('hash', 1)) ~> cricsheet\ncricsheet foldDown(unroll(info.dates),\n\tmapColumn(\n\t\tdates = info.dates,\n\t\tfilename\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> flattendates\ncricsheet foldDown(unroll(info.teams),\n\tmapColumn(\n\t\tteam = info.teams,\n\t\tfilename\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> flattenteams\ncricsheet foldDown(unroll(info.officials.match_referees),\n\tmapColumn(\n\t\tfilename,\n\t\tmatch_referees = info.officials.match_referees\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> flattenreferees\ncricsheet foldDown(unroll(info.players.{South Africa}),\n\tmapColumn(\n\t\tplayer = info.players.{South Africa},\n\t\tfilename\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> Flatten1\nflattendates sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tfilename as string,\n\t\tmatch_date as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tpreSQLs:['delete from s_dates'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tfilename,\n\t\tmatch_date = dates\n\t)) ~> sinksdates\nflattenteams sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tfilename as string,\n\t\tteam as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tpreSQLs:['delete from s_teams'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tfilename,\n\t\tteam\n\t)) ~> sinksteams\ncricsheet sink(allowSchemaDrift: false,\n\tvalidateSchema: false,\n\tinput(\n\t\tvenue as string,\n\t\tevent_name as string,\n\t\tmatch_number as integer,\n\t\tmatch_date as date,\n\t\twinner as string,\n\t\ttoss_winner as string,\n\t\ttoss_decision as string,\n\t\tplayer_of_match as string,\n\t\tfilename as string,\n\t\tstage as string,\n\t\tmatch_group as string,\n\t\twinning_margin as string,\n\t\teliminator as string,\n\t\tmethod as string,\n\t\tresult as string,\n\t\tseason as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tpreSQLs:['delete from s_matches'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tvenue = info.venue,\n\t\tevent_name = info.event.name,\n\t\tmatch_number = info.event.match_number,\n\t\twinner = info.outcome.winner,\n\t\ttoss_winner = info.toss.winner,\n\t\ttoss_decision = info.toss.decision,\n\t\tplayer_of_match = info.player_of_match,\n\t\tmatch_group = info.event.group,\n\t\tfilename,\n\t\tseason = info.season\n\t)) ~> sinkmatches\nflattenreferees sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tfilename as string,\n\t\treferee as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tpreSQLs:['delete from s_referees'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tfilename,\n\t\treferee = match_referees\n\t)) ~> sinksreferees\nFlatten1 sink(allowSchemaDrift: false,\n\tvalidateSchema: false,\n\tinput(\n\t\tstring1 as string,\n\t\tstring2 as string,\n\t\tstring3 as string,\n\t\tstring4 as string,\n\t\tstring5 as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tpreSQLs:['delete from s_generic'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tstring1 = player,\n\t\tstring2 = filename\n\t)) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/cricsheetJSON')]",
				"[concat(variables('factoryId'), '/datasets/s_dates')]",
				"[concat(variables('factoryId'), '/datasets/s_teams')]",
				"[concat(variables('factoryId'), '/datasets/s_matches')]",
				"[concat(variables('factoryId'), '/datasets/s_referees')]",
				"[concat(variables('factoryId'), '/datasets/s_generic')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "cricsheetJSON",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "s_file",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tmeta as (data_version as string, created as string, revision as integer),\n\t\tinfo as (balls_per_over as integer, city as string, dates as string[], event as (name as string, match_number as integer, group as string), gender as string, match_type as string, match_type_number as integer, officials as (match_referees as string[], reserve_umpires as string[], tv_umpires as string[], umpires as string[]), outcome as (winner as string, by as (wickets as integer)), overs as integer, player_of_match as string[], players as ({South Africa} as string[], Australia as string[]), registry as (people as ({A Nortje} as string, {A Zampa} as string, {AJ Finch} as string, {AK Markram} as string, {Ahsan Raza} as string, {D Pretorius} as string, {DA Miller} as string, {DA Warner} as string, {GJ Maxwell} as string, {H Klaasen} as string, {HE van der Dussen} as string, {J Srinath} as string, {JR Hazlewood} as string, {K Rabada} as string, {KA Maharaj} as string, {L Rusere} as string, {MA Gough} as string, {MA Starc} as string, {MP Stoinis} as string, {MR Marsh} as string, {MS Wade} as string, {Nitin Menon} as string, {PJ Cummins} as string, {Q de Kock} as string, {SPD Smith} as string, {T Bavuma} as string, {T Shamsi} as string)), season as string, team_type as string, teams as string[], toss as (decision as string, winner as string), venue as string),\n\t\tinnings as (team as string, overs as (over as integer, deliveries as (batter as string, bowler as string, non_striker as string, runs as (batter as integer, extras as integer, total as integer))[])[], powerplays as (from as double, to as double, type as string)[])[]\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\trowUrlColumn: 'filename',\n\tdocumentForm: 'arrayOfDocuments',\n\tpartitionBy('hash', 1)) ~> source1\nsource1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tfilename as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tpreSQLs:['delete from s_file'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tfilename\n\t)) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/cricsheetJSON')]",
				"[concat(variables('factoryId'), '/datasets/s_file')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/s_referees')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "filename",
						"type": "varchar"
					},
					{
						"name": "referee",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "s_referees"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/s_generic')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "string1",
						"type": "varchar"
					},
					{
						"name": "string2",
						"type": "varchar"
					},
					{
						"name": "string3",
						"type": "varchar"
					},
					{
						"name": "string4",
						"type": "varchar"
					},
					{
						"name": "string5",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "s_generic"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "cricsheetinput"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		}
	]
}